{"version":3,"file":"static/webpack/static/development/pages/Index.js.e24c6d7508bbe6f0a2d4.hot-update.js","sources":["webpack:///./pages/Index.js"],"sourcesContent":["import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Action } from '../redux/actions';\n\nimport GlobalStyles from 'styles/styles.scss';\n\nclass Index extends Component {\n\tstatic getInitialProps ({ reduxStore, req }) {\n\t\tconst isServer = !!req;\n\n\t\tconst fetch_promise = Promise.resolve()\n\t\t\t.then(() => reduxStore.dispatch(Action.fetchMovieData('now_playing', 'US')));\n\t\t\t\n\t\treturn fetch_promise.payload;\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.props.fetchMovieData('now_playing', 'US');\n\t}\n\n\ttoggle = () => {\n\t\tconst { toggleTap } = this.props\n\t\ttoggleTap()\n\t}\n\n\tincrement = () => {\n\t\tconst { incrementCount } = this.props\n\t\tincrementCount()\n\t}\n\n\tdecrement = () => {\n\t\tconst { decrementCount } = this.props\n\t\tdecrementCount()\n\t}\n\n\trender() {\n\t\tconst { tap, count } = this.props;\n\n\t\tconsole.log(this.props)\n\n\t\treturn (\n\t\t\t<section>\n\t\t\t\t<h1>\n\t\t\t\t\tThis is my Next.js Boilerplate.\n\t\t\t\t</h1>\n\t\t\t\t<h2>\n\t\t\t\t\t{this.props.count}\n\t\t\t\t    <button onClick={this.increment}>+1</button>\n\t\t\t\t    <button onClick={this.decrement}>-1</button>\n\t\t\t\t</h2>\n\t\t\t\t<button onClick={this.toggle}>\n\t\t\t\t\t{tap ? 'Toggle Off' : 'Toggle On'}\n\t\t\t\t</button>\n\t\t\t\t{tap && \n\t\t\t\t\t<h2>\n\t\t\t\t\t\tToggler is ON\n\t\t\t\t\t</h2>\n\t\t\t\t}\n\t\t\t</section>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\ttap: state.tap,\n\t\tcount: state.count,\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\ttoggleTap() {\n\t\t\tdispatch(Action.toggleTap());\n\t\t},\n\t\tincrementCount() {\n\t\t\tdispatch(Action.incrementCount());\n\t\t},\n\t\tdecrementCount() {\n\t\t\tdispatch(Action.decrementCount());\n\t\t},\n\t\tfetchMovieData(status, region) {\n\t\t\tdispatch(Action.fetchMovieData(status, region));\n\t\t}\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Index);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AAOA;AAAA;AACA;AAAA;AAEA;AAAA;AAUA;;;AArDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;AARA;AACA;AAwDA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;;;;A","sourceRoot":""}