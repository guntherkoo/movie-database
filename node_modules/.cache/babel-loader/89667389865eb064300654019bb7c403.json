{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport { initializeStore } from \"../redux/makeStore\";\nvar isServer = typeof window === 'undefined';\nvar __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__';\n\nfunction getOrCreateStore(initial_state) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return initializeStore(initial_state);\n  } // Create store if unavailable on the client and set it on the window object\n\n\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initial_state);\n  }\n\n  return window[__NEXT_REDUX_STORE__];\n}\n\nexport default (function (App) {\n  return (\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(AppWithRedux, _React$Component);\n\n      _createClass(AppWithRedux, null, [{\n        key: \"getInitialProps\",\n        value: function () {\n          var _getInitialProps = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(appContext) {\n            var reduxStore, appProps;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    // Get or Create the store with `undefined` as initial_state\n                    // This allows you to set a custom default initial_state\n                    reduxStore = getOrCreateStore(); // Provide the store to getInitialProps of pages\n\n                    appContext.ctx.reduxStore = reduxStore;\n                    appProps = {};\n\n                    if (!(typeof App.getInitialProps === 'function')) {\n                      _context.next = 7;\n                      break;\n                    }\n\n                    _context.next = 6;\n                    return App.getInitialProps(appContext);\n\n                  case 6:\n                    appProps = _context.sent;\n\n                  case 7:\n                    return _context.abrupt(\"return\", _objectSpread({}, appProps, {\n                      initial_state: reduxStore.getState()\n                    }));\n\n                  case 8:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          function getInitialProps(_x) {\n            return _getInitialProps.apply(this, arguments);\n          }\n\n          return getInitialProps;\n        }()\n      }]);\n\n      function AppWithRedux(props) {\n        var _this;\n\n        _classCallCheck(this, AppWithRedux);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AppWithRedux).call(this, props));\n        _this.reduxStore = getOrCreateStore(props.initial_state);\n        return _this;\n      }\n\n      _createClass(AppWithRedux, [{\n        key: \"render\",\n        value: function render() {\n          return React.createElement(App, _extends({}, this.props, {\n            reduxStore: this.reduxStore\n          }));\n        }\n      }]);\n\n      return AppWithRedux;\n    }(React.Component)\n  );\n});","map":{"version":3,"sources":["/Users/guntherkoo/Documents/Side Projects/movie-database/lib/with-redux-store.js"],"names":["React","initializeStore","isServer","window","__NEXT_REDUX_STORE__","getOrCreateStore","initial_state","App","appContext","reduxStore","ctx","appProps","getInitialProps","getState","props","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT;AAEA,IAAMC,QAAQ,GAAG,OAAOC,MAAP,KAAkB,WAAnC;AACA,IAAMC,oBAAoB,GAAG,sBAA7B;;AAEA,SAASC,gBAAT,CAA2BC,aAA3B,EAA0C;AACzC;AACA,MAAIJ,QAAJ,EAAc;AACb,WAAOD,eAAe,CAACK,aAAD,CAAtB;AACA,GAJwC,CAMzC;;;AACA,MAAI,CAACH,MAAM,CAACC,oBAAD,CAAX,EAAmC;AAClCD,IAAAA,MAAM,CAACC,oBAAD,CAAN,GAA+BH,eAAe,CAACK,aAAD,CAA9C;AACA;;AACD,SAAOH,MAAM,CAACC,oBAAD,CAAb;AACA;;AAED,gBAAe,UAAAG,GAAG,EAAI;AACrB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAC+BC,UAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEE;AACA;AACMC,oBAAAA,UAJR,GAIqBJ,gBAAgB,EAJrC,EAME;;AACAG,oBAAAA,UAAU,CAACE,GAAX,CAAeD,UAAf,GAA4BA,UAA5B;AAEIE,oBAAAA,QATN,GASiB,EATjB;;AAAA,0BAUM,OAAOJ,GAAG,CAACK,eAAX,KAA+B,UAVrC;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAWoBL,GAAG,CAACK,eAAJ,CAAoBJ,UAApB,CAXpB;;AAAA;AAWGG,oBAAAA,QAXH;;AAAA;AAAA,uEAeMA,QAfN;AAgBGL,sBAAAA,aAAa,EAAEG,UAAU,CAACI,QAAX;AAhBlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAoBC,4BAAaC,KAAb,EAAoB;AAAA;;AAAA;;AACnB,0FAAMA,KAAN;AACA,cAAKL,UAAL,GAAkBJ,gBAAgB,CAACS,KAAK,CAACR,aAAP,CAAlC;AAFmB;AAGnB;;AAvBF;AAAA;AAAA,iCAyBW;AACT,iBAAO,oBAAC,GAAD,eAAS,KAAKQ,KAAd;AAAqB,YAAA,UAAU,EAAE,KAAKL;AAAtC,aAAP;AACA;AA3BF;;AAAA;AAAA,MAAkCT,KAAK,CAACe,SAAxC;AAAA;AA6BA,CA9BD","sourcesContent":["import React from 'react';\nimport { initializeStore } from '../redux/makeStore';\n\nconst isServer = typeof window === 'undefined'\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__'\n\nfunction getOrCreateStore (initial_state) {\n\t// Always make a new store if server, otherwise state is shared between requests\n\tif (isServer) {\n\t\treturn initializeStore(initial_state)\n\t}\n\n\t// Create store if unavailable on the client and set it on the window object\n\tif (!window[__NEXT_REDUX_STORE__]) {\n\t\twindow[__NEXT_REDUX_STORE__] = initializeStore(initial_state)\n\t}\n\treturn window[__NEXT_REDUX_STORE__]\n}\n\nexport default App => {\n\treturn class AppWithRedux extends React.Component {\n\t\tstatic async getInitialProps (appContext) {\n\t\t\t// Get or Create the store with `undefined` as initial_state\n\t\t\t// This allows you to set a custom default initial_state\n\t\t\tconst reduxStore = getOrCreateStore()\n\n\t\t\t// Provide the store to getInitialProps of pages\n\t\t\tappContext.ctx.reduxStore = reduxStore\n\n\t\t\tlet appProps = {}\n\t\t\tif (typeof App.getInitialProps === 'function') {\n\t\t\t\tappProps = await App.getInitialProps(appContext)\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...appProps,\n\t\t\t\tinitial_state: reduxStore.getState()\n\t\t\t}\n\t\t}\n\n\t\tconstructor (props) {\n\t\t\tsuper(props)\n\t\t\tthis.reduxStore = getOrCreateStore(props.initial_state)\n\t\t}\n\n\t\trender () {\n\t\t\treturn <App {...this.props} reduxStore={this.reduxStore} />\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}