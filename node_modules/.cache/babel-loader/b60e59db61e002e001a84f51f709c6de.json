{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Action } from \"../redux/actions\";\nimport GlobalStyles from \"../styles/styles.scss\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Index)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"toggle\", function () {\n      var toggleTap = _this.props.toggleTap;\n      toggleTap();\n    });\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var tap = this.props.tap;\n      var results = this.props.payload.results;\n      console.log(results);\n      return React.createElement(\"section\", null, React.createElement(\"h1\", null, \"Now Playing Movies\"), React.createElement(\"button\", {\n        onClick: this.toggle\n      }, tap ? 'Toggle Off' : 'Toggle On'), tap && React.createElement(\"h2\", null, \"Toggler is ON\"));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var reduxStore = _ref.reduxStore,\n          req = _ref.req;\n      var isServer = !!req;\n\n      var fetch_movie_promise = _Promise.resolve().then(function () {\n        return reduxStore.dispatch(Action.fetchMovieData('now_playing', 'US'));\n      });\n\n      return fetch_movie_promise;\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    tap: state.tap\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    toggleTap: function toggleTap() {\n      dispatch(Action.toggleTap());\n    },\n    fetchMovieData: function fetchMovieData(status, region) {\n      dispatch(Action.fetchMovieData(status, region));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/Users/guntherkoo/Documents/Side Projects/movie-database/pages/Index.js"],"names":["Component","connect","bindActionCreators","Action","GlobalStyles","Index","toggleTap","props","tap","results","payload","console","log","toggle","reduxStore","req","isServer","fetch_movie_promise","resolve","then","dispatch","fetchMovieData","mapStateToProps","state","mapDispatchToProps","status","region"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,MAAT;AAEA,OAAOC,YAAP;;IAEMC,K;;;;;;;;;;;;;;;;;;6DAUI,YAAM;AAAA,UACNC,SADM,GACQ,MAAKC,KADb,CACND,SADM;AAEdA,MAAAA,SAAS;AACT,K;;;;;;;6BAEQ;AAAA,UACAE,GADA,GACQ,KAAKD,KADb,CACAC,GADA;AAAA,UAEAC,OAFA,GAEY,KAAKF,KAAL,CAAWG,OAFvB,CAEAD,OAFA;AAIRE,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,aACC,qCACC,qDADD,EAIC;AAAQ,QAAA,OAAO,EAAE,KAAKI;AAAtB,SACEL,GAAG,GAAG,YAAH,GAAkB,WADvB,CAJD,EAOEA,GAAG,IACH,gDARF,CADD;AAeA;;;0CAlC4C;AAAA,UAAnBM,UAAmB,QAAnBA,UAAmB;AAAA,UAAPC,GAAO,QAAPA,GAAO;AAC5C,UAAMC,QAAQ,GAAG,CAAC,CAACD,GAAnB;;AAEA,UAAME,mBAAmB,GAAG,SAAQC,OAAR,GAC1BC,IAD0B,CACrB;AAAA,eAAML,UAAU,CAACM,QAAX,CAAoBjB,MAAM,CAACkB,cAAP,CAAsB,aAAtB,EAAqC,IAArC,CAApB,CAAN;AAAA,OADqB,CAA5B;;AAGA,aAAOJ,mBAAP;AACA;;;;EARkBjB,S;;AAsCpB,IAAMsB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAChC,SAAO;AACNf,IAAAA,GAAG,EAAEe,KAAK,CAACf;AADL,GAAP;AAGA,CAJD;;AAMA,IAAMgB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAJ,QAAQ,EAAI;AACtC,SAAO;AACNd,IAAAA,SADM,uBACM;AACXc,MAAAA,QAAQ,CAACjB,MAAM,CAACG,SAAP,EAAD,CAAR;AACA,KAHK;AAINe,IAAAA,cAJM,0BAISI,MAJT,EAIiBC,MAJjB,EAIyB;AAC9BN,MAAAA,QAAQ,CAACjB,MAAM,CAACkB,cAAP,CAAsBI,MAAtB,EAA8BC,MAA9B,CAAD,CAAR;AACA;AANK,GAAP;AAQA,CATD;;AAWA,eAAezB,OAAO,CACrBqB,eADqB,EAErBE,kBAFqB,CAAP,CAGbnB,KAHa,CAAf","sourcesContent":["import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Action } from '../redux/actions';\n\nimport GlobalStyles from 'styles/styles.scss';\n\nclass Index extends Component {\n\tstatic getInitialProps ({ reduxStore, req }) {\n\t\tconst isServer = !!req;\n\n\t\tconst fetch_movie_promise = Promise.resolve()\n\t\t\t.then(() => reduxStore.dispatch(Action.fetchMovieData('now_playing', 'US')));\n\t\t\t\n\t\treturn fetch_movie_promise;\n\t}\n\n\ttoggle = () => {\n\t\tconst { toggleTap } = this.props\n\t\ttoggleTap()\n\t}\n\n\trender() {\n\t\tconst { tap } = this.props;\n\t\tconst { results } = this.props.payload;\n\n\t\tconsole.log(results)\n\t\treturn (\n\t\t\t<section>\n\t\t\t\t<h1>\n\t\t\t\t\tNow Playing Movies\n\t\t\t\t</h1>\n\t\t\t\t<button onClick={this.toggle}>\n\t\t\t\t\t{tap ? 'Toggle Off' : 'Toggle On'}\n\t\t\t\t</button>\n\t\t\t\t{tap && \n\t\t\t\t\t<h2>\n\t\t\t\t\t\tToggler is ON\n\t\t\t\t\t</h2>\n\t\t\t\t}\n\t\t\t</section>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\ttap: state.tap,\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\ttoggleTap() {\n\t\t\tdispatch(Action.toggleTap());\n\t\t},\n\t\tfetchMovieData(status, region) {\n\t\t\tdispatch(Action.fetchMovieData(status, region));\n\t\t}\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Index);\n"]},"metadata":{},"sourceType":"module"}