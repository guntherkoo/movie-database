{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { Type } from \"../actions\"; // Handle Movie Data Response\n\nvar handleFetchMovieDataSuccess = function handleFetchMovieDataSuccess(state, action) {\n  var results = action.payload.results;\n  return _Object$assign({}, state, {\n    movie_results: results\n  });\n}; // REDUCERS\n\n\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Type.TOGGLE:\n      return _Object$assign({}, state, {\n        tap: !state.tap\n      });\n\n    case 'FETCH_MOVIE_DATA_SUCCESS':\n      return handleFetchMovieDataSuccess(state, action);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/guntherkoo/Documents/Side Projects/movie-database/redux/reducers/index.js"],"names":["Type","handleFetchMovieDataSuccess","state","action","results","payload","movie_results","reducer","type","TOGGLE","tap"],"mappings":";AAAA,SAASA,IAAT,qB,CAEA;;AACA,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACtD,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAP,CAAeD,OAA/B;AAEA,SAAO,eAAc,EAAd,EAAkBF,KAAlB,EAAyB;AAC/BI,IAAAA,aAAa,EAAEF;AADgB,GAAzB,CAAP;AAGA,CAND,C,CAQA;;;AACA,eAAe,SAASG,OAAT,GAAqC;AAAA,MAApBL,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACnD,UAAQA,MAAM,CAACK,IAAf;AACC,SAAKR,IAAI,CAACS,MAAV;AACC,aAAO,eAAc,EAAd,EAAkBP,KAAlB,EAAyB;AAC/BQ,QAAAA,GAAG,EAAE,CAACR,KAAK,CAACQ;AADmB,OAAzB,CAAP;;AAID,SAAK,0BAAL;AACC,aAAOT,2BAA2B,CAACC,KAAD,EAAQC,MAAR,CAAlC;;AAED;AACC,aAAOD,KAAP;AAVF;AAYA","sourcesContent":["import { Type } from '../actions';\n\n// Handle Movie Data Response\nconst handleFetchMovieDataSuccess = (state, action) => {\n\tconst results = action.payload.results;\n\n\treturn Object.assign({}, state, {\n\t\tmovie_results: results\n\t})\n}\n\n// REDUCERS\nexport default function reducer(state = {}, action) {\n\tswitch (action.type) {\n\t\tcase Type.TOGGLE:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\ttap: !state.tap\n\t\t\t})\n\n\t\tcase 'FETCH_MOVIE_DATA_SUCCESS':\n\t\t\treturn handleFetchMovieDataSuccess(state, action);\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}"]},"metadata":{},"sourceType":"module"}